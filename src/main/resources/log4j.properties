#log4j.rootLogger=WARN,console,stdout
log4j.rootLogger=WARN,console
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{ABSOLUTE} %t %5p %c{1}.%M:%L - %X{logContext} %m%n

# Change this to set Spark log level
log4j.logger.org.apache.spark=INFO
log4j.logger.org.apache.hadoop.yarn=WARN
log4j.logger.org.apache.spark.ExecutorAllocationManager=WARN
log4j.logger.org.apache.spark.MapOutputTrackerMasterEndpoint=WARN
log4j.logger.org.apache.spark.storage=WARN
log4j.logger.org.apache.spark.executor=WARN
log4j.logger.org.apache.spark.scheduler=WARN
log4j.logger.org.apache.spark.deploy.yarn=WARN
log4j.logger.org.apache.spark.MapOutputTrackerWorker=WARN
log4j.logger.org.apache.spark.broadcast=WARN
log4j.logger.org.apache.spark.network=WARN
log4j.logger.org.apache.spark.SecurityManager=WARN
log4j.logger.org.apache.spark.scheduler.TaskSetManager=WARN
log4j.logger.org.apache.spark.deploy.yarn.ApplicationMaster=INFO

log4j.logger.com.cats.effects.FunctionalLoggingExample$Program$=DEBUG

# Silence akka remoting
log4j.logger.Remoting=ERROR

# Ignore messages below warning level from Jetty, because it's a bit verbose
log4j.logger.org.eclipse.jetty=ERROR
log4j.logger.org.spark_project.jetty=ERROR

# print INFO level logs from our app's code and ACF framework code.
log4j.logger.com.here.hdmap=INFO
log4j.logger.com.here.platform.data.processing=INFO